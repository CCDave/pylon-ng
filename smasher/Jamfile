import os ;
import python ;
using python ;
import modules ;
local home    = [ modules.peek : HOME ] ;
local root    = $(home)/devspace/pylon-ng ;
local sun     = $(home)/devspace/sun  ;
local os_ver  = [ modules.peek : OS_VER ] ;
local ext_ver = [ modules.peek : EXT_VER ] ;
# local ext_ver = 30 ;
local machine = [ SHELL "uname -m " ] ;

project smasher
        : requirements <include>/usr/local/include/
        : requirements <include>$(sun)/include/
        : requirements <include>/usr/include
        : requirements <include>$(root)/smasher/include
        : default-build <threading>multi
        : build-dir     $(root)/build
        ;




local smasher = pylon_smasher-$(ext_ver) ;
local coretest = $(root)/smasher/test/core ;

Source =
     # smasher.cpp dict.cpp shm_dict.cpp log_sysl.cpp rest.cpp
     smasher.cpp dict.cpp log_sysl.cpp rest.cpp
    ;

lib $(smasher)
    : $(root)/smasher/src/$(Source)
    ;



# exe data_loader
#     : $(coretest)/data_loader.cpp  $(smasher)
#     ;
#
# exe data_clean
#     : $(coretest)/data_clean.cpp  $(smasher)
#     ;
#
# exe data_find
#     : $(coretest)/data_find.cpp  $(smasher)
#     ;

exe smasher_test
    : $(coretest)/smasher_test.cpp  $(smasher)
    ;

exe smasher_speed
    : $(coretest)/smasher_speed.cpp  $(smasher)
    ;

# exe sdict_speed
#     : $(coretest)/sdict_speed.cpp  $(smasher)
#     ;

# stage dist1 :   $(smasher) data_loader  data_clean data_find smasher_test smasher_speed sdict_speed : <location>$(root)/smasher/bin/ ;
#

stage dist1 :   $(smasher) smasher_test smasher_speed : <location>$(root)/smasher/bin/ ;
stage dist2 :   $(smasher)  : <location>$(root)/src/modules/$(os_ver) ;

